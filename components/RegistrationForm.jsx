"use client"

import { zodResolver } from "@hookform/resolvers/zod"
import { useForm } from "react-hook-form"
import { z } from "zod"
import { ChevronRightIcon, InfoIcon, Pencil, BookOpen, Home } from "lucide-react"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "./ui/card"
import { Alert, AlertDescription, AlertTitle } from "./ui/alert"
import { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from "./ui/form"
import { Separator } from "./ui/separator"
import { Input } from "./ui/input"
import { RadioGroup, RadioGroupItem } from "./ui/radio-group"
import { Select, SelectItem, SelectTrigger, SelectValue, SelectContent } from "./ui/select"
import { Textarea } from "./ui/textarea"
import { useState } from "react"
import { CongratsModal } from "./CongratsModal"
import axios from "axios"
import { ErrorModal } from "./ErrorModal"
import { HierarchicalDatePicker } from "./DatePicker"

const formSchema = z.object({
    studentName: z.string().min(2, {
        message: "ржирж╛ржо ржЕржмрж╢рзНржпржЗ ржжрж┐рждрзЗ рж╣ржмрзЗ",
    }),
    fatherName: z.string().min(2, {
        message: "ржкрж┐рждрж╛рж░ ржирж╛ржо ржЕржмрж╢рзНржпржЗ ржжрж┐рждрзЗ рж╣ржмрзЗ",
    }),
    motherName: z.string().min(2, {
        message: "ржорж╛рждрж╛рж░ ржирж╛ржо ржЕржмрж╢рзНржпржЗ ржжрж┐рждрзЗ рж╣ржмрзЗ",
    }),
    currentAddress: z.string().min(5, {
        message: "ржмрж░рзНрждржорж╛ржи ржарж┐ржХрж╛ржирж╛ ржЕржмрж╢рзНржпржЗ ржжрж┐рждрзЗ рж╣ржмрзЗ",
    }),
    studentMobile: z.string().min(11, {
        message: "рж╕ржарж┐ржХ ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ ржжрж┐ржи",
    }),
    education: z.string().min(2, {
        message: "рж╢рж┐ржХрзНрж╖рж╛ржЧржд ржпрзЛржЧрзНржпрждрж╛ ржЕржмрж╢рзНржпржЗ ржжрж┐рждрзЗ рж╣ржмрзЗ",
    }),
    birthDate: z.date({
        required_error: "ржЬржирзНржо рждрж╛рж░рж┐ржЦ ржЕржмрж╢рзНржпржЗ ржжрж┐рждрзЗ рж╣ржмрзЗ",
    }),
    occupation: z.string().min(2, {
        message: "ржкрзЗрж╢рж╛ ржЕржмрж╢рзНржпржЗ ржжрж┐рждрзЗ рж╣ржмрзЗ",
    }),
    maritalStatus: z.string({
        required_error: "ржмрзИржмрж╛рж╣рж┐ржХ ржЕржмрж╕рзНржерж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
    }),
    course: z.string({
        required_error: "ржХрзЛрж░рзНрж╕ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
    }),
    gender: z.string({
        required_error: "рж▓рж┐ржЩрзНржЧ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
    }),
})

export function RegistrationForm() {
    const [showSuccessModal, setShowSuccessModal] = useState(false)
    const [showErrorModal, setShowErrorModal] = useState(false)
    const [errorMessage, setErrorMessage] = useState("")
    const [formValues, setFormValues] = useState(null)
    const [submittedName, setSubmittedName] = useState("")
    const [isSubmitting, setIsSubmitting] = useState(false)

    const form = useForm({
        resolver: zodResolver(formSchema),
        defaultValues: {
            studentName: "",
            fatherName: "",
            motherName: "",
            currentAddress: "",
            permanentAddress: "",
            studentMobile: "",
            guardianMobile: "",
            email: "",
            education: "",
            occupation: "",
            bloodGroup: "",
        },
    })

    async function submitForm(data) {
        setIsSubmitting(true)

        try {
            const postStudentData = await axios.post("/api/registered-students", data)
            const studentData = await postStudentData.data
            const sendEmail = await axios.post("/api/mail", data)
            if (studentData.message && sendEmail.data.message) {
                setSubmittedName(data.studentName)
                setShowSuccessModal(true)
            } else {
                console.log("Registration Failed", studentData.message);
                setErrorMessage(studentData.message || "ржирж┐ржмржирзНржзржи рж╕ржорзНржкржирзНржи ржХрж░рж╛ ржпрж╛ржпрж╝ржирж┐ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред")
                setShowErrorModal(true)
            }
        } catch (error) {
            console.error("Error submitting form:", error)
            setErrorMessage("рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рж╛ ржпрж╛ржпрж╝ржирж┐ред ржЖржкржирж╛рж░ ржЗржирзНржЯрж╛рж░ржирзЗржЯ рж╕ржВржпрзЛржЧ ржЪрзЗржХ ржХрж░рзБржиред")
            setShowErrorModal(true)
        }
        finally {
            setIsSubmitting(false)
        }
    }

    function onSubmit(data) {
        setFormValues(data)
        submitForm(data).then(() => {
            form.reset()
        })
    }

    function handleRetry() {
        if (formValues) {
            submitForm(formValues)
        }
        setShowErrorModal(false)
    }

    return (
        <div className="space-y-8 mt-5 font-hind-siliguri">
            <Card className="border-none bg-primary-100/5s overflow-hidden relative">
                <div className="absolute top-0 left-0 w-full h-2 bg-gradient-to-r from-primary-400 to-primary-600"></div>
                <CardHeader className="space-y-1 pb-6">
                    <div className="flex justify-center mb-2">
                        <div className="bg-primary-500 text-white p-3 rounded-full">
                            <Pencil className="h-6 w-6" />
                        </div>
                    </div>
                    <CardTitle className="text-3xl font-bold tracking-tight text-center text-primary-700">
                        ЁЯУв ржлрзНрж░рж┐ рж╕рзЗржорж┐ржирж╛рж░рзЗ ржЕржВрж╢ржЧрзНрж░рж╣ржг ржХрж░рзБржи

                    </CardTitle>
                    <CardDescription className="text-base text-center">
                        ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржирж┐ржЪрзЗрж░ ржлрж░рзНржоржЯрж┐ рж╕ржарж┐ржХржнрж╛ржмрзЗ ржкрзВрж░ржг ржХрж░рзБржиред рж╕ржХрж▓ рждржерзНржп ржЕржмрж╢рзНржпржЗ рж╕рждрзНржп ржУ рж╕ржарж┐ржХржнрж╛ржмрзЗ ржкрзНрж░ржжрж╛ржи ржХрж░рждрзЗ рж╣ржмрзЗ ржпрж╛рждрзЗ ржЖржкржирж╛рж░ ржЕржВрж╢ржЧрзНрж░рж╣ржг ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рж╛ ржпрж╛ржпрж╝ред
                    </CardDescription>
                </CardHeader>
            </Card>

            <Alert className="bg-primary-50 border-primary-200 border-2 rounded-xl">
                <InfoIcon className="h-5 w-5 text-primary-500" />
                <AlertTitle className="text-base font-medium text-primary-700">ржлрж░рзНржо ржкрзВрж░ржгрзЗрж░ ржирж┐рж░рзНржжрзЗрж╢рж╛ржмрж▓рзА</AlertTitle>
                <AlertDescription className="mt-2 text-sm">
                    <ul className="list-disc pl-5 space-y-1">
                        <li>рж╕ржХрж▓ рждрж╛рж░ржХрж╛ (*) ржЪрж┐рж╣рзНржирж┐ржд ржШрж░ ржЕржмрж╢рзНржпржЗ ржкрзВрж░ржг ржХрж░рждрзЗ рж╣ржмрзЗ</li>
                        <li>ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ рззрзз ржбрж┐ржЬрж┐ржЯрзЗрж░ рж╣рждрзЗ рж╣ржмрзЗ (ржЙржжрж╛рж╣рж░ржг: рзжрззрзнрззрзирзйрзкрзлрзмрзнрзо)</li>
                        <li>ржлрж░рзНржо ржкрзВрж░ржг рж╢рзЗрж╖рзЗ "ржЬржорж╛ ржжрж┐ржи" ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи</li>
                        <li>ржлрж░рзНржо ржЬржорж╛ ржжрзЗржУржпрж╝рж╛рж░ ржкрж░ ржПржХржЯрж┐ ржирж┐рж╢рзНржЪрж┐рждржХрж░ржг ржмрж╛рж░рзНрждрж╛ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗ</li>
                        <li>ржХрзЛржи рж╕ржорж╕рзНржпрж╛ рж╣рж▓рзЗ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрзЗржирзНржжрзНрж░рзЗрж░ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи ржиржорзНржмрж░рзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи</li>
                    </ul>
                </AlertDescription>
            </Alert>

            <Card className="border rounded-xl overflow-hidden border-primary-200">
                <CardContent className="p-6 pt-8">
                    <Form {...form}>
                        <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">
                            <div className="space-y-4">
                                <div className="flex items-center gap-2 bg-primary-100 p-3 rounded-lg">
                                    <div className="bg-primary-500 text-white p-2 rounded-full">
                                        <Pencil className="h-4 w-4" />
                                    </div>
                                    <h3 className="text-lg font-bold text-primary-700">ржмрзНржпржХрзНрждрж┐ржЧржд рждржерзНржп</h3>
                                </div>
                                <Separator className="my-2 bg-primary-100" />

                                <div className="grid gap-6 md:grid-cols-2">
                                    <FormField
                                        control={form.control}
                                        name="studentName"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржирж╛ржо *</FormLabel>
                                                <FormControl>
                                                    <Input
                                                        placeholder="ржкрзВрж░рзНржг ржирж╛ржо рж▓рж┐ржЦрзБржи"
                                                        {...field}
                                                        className="border-primary-200 focus-visible:ring-primary-200 rounded-lg"
                                                    />
                                                </FormControl>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />

                                    <HierarchicalDatePicker form={form} name="birthDate" label="ржЬржирзНржо рждрж╛рж░рж┐ржЦ *" placeholder="рждрж╛рж░рж┐ржЦ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи" />
                                </div>

                                <div className="grid gap-6 md:grid-cols-2">
                                    <FormField
                                        control={form.control}
                                        name="fatherName"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">ржкрж┐рждрж╛рж░ ржирж╛ржо *</FormLabel>
                                                <FormControl>
                                                    <Input
                                                        placeholder="ржкрж┐рждрж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи"
                                                        {...field}
                                                        className="border-primary-200 focus-visible:ring-primary-200 rounded-lg"
                                                    />
                                                </FormControl>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />

                                    <FormField
                                        control={form.control}
                                        name="motherName"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">ржорж╛рждрж╛рж░ ржирж╛ржо *</FormLabel>
                                                <FormControl>
                                                    <Input
                                                        placeholder="ржорж╛рждрж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи"
                                                        {...field}
                                                        className="border-primary-200 focus-visible:ring-primary-200 rounded-lg"
                                                    />
                                                </FormControl>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />
                                </div>

                                <div className="grid gap-6 md:grid-cols-2">
                                    <FormField
                                        control={form.control}
                                        name="gender"
                                        render={({ field }) => (
                                            <FormItem className="space-y-3">
                                                <FormLabel className="text-primary-700 font-medium">рж▓рж┐ржЩрзНржЧ *</FormLabel>
                                                <FormControl>
                                                    <RadioGroup
                                                        onValueChange={field.onChange}
                                                        defaultValue={field.value}
                                                        className="flex space-x-4"
                                                    >
                                                        <FormItem className="flex items-center space-x-2 space-y-0">
                                                            <FormControl>
                                                                <RadioGroupItem value="ржкрзБрж░рзБрж╖" className="text-primary-600" />
                                                            </FormControl>
                                                            <FormLabel className="font-normal">ржкрзБрж░рзБрж╖</FormLabel>
                                                        </FormItem>
                                                        <FormItem className="flex items-center space-x-2 space-y-0">
                                                            <FormControl>
                                                                <RadioGroupItem value="ржорж╣рж┐рж▓рж╛" className="text-primary-600" />
                                                            </FormControl>
                                                            <FormLabel className="font-normal">ржорж╣рж┐рж▓рж╛</FormLabel>
                                                        </FormItem>
                                                        <FormItem className="flex items-center space-x-2 space-y-0">
                                                            <FormControl>
                                                                <RadioGroupItem value="ржЕржирзНржпрж╛ржирзНржп" className="text-primary-600" />
                                                            </FormControl>
                                                            <FormLabel className="font-normal">ржЕржирзНржпрж╛ржирзНржп</FormLabel>
                                                        </FormItem>
                                                    </RadioGroup>
                                                </FormControl>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />

                                    <FormField
                                        control={form.control}
                                        name="maritalStatus"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">ржмрзИржмрж╛рж╣рж┐ржХ ржЕржмрж╕рзНржерж╛ *</FormLabel>
                                                <Select onValueChange={field.onChange} defaultValue={field.value}>
                                                    <FormControl>
                                                        <SelectTrigger className="w-full border-primary-200 focus:ring-primary-500 rounded-lg">
                                                            <SelectValue placeholder="ржмрзИржмрж╛рж╣рж┐ржХ ржЕржмрж╕рзНржерж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи" />
                                                        </SelectTrigger>
                                                    </FormControl>
                                                    <SelectContent className="rounded-lg">
                                                        <SelectItem value="ржЕржмрж┐ржмрж╛рж╣рж┐ржд">ржЕржмрж┐ржмрж╛рж╣рж┐ржд</SelectItem>
                                                        <SelectItem value="ржмрж┐ржмрж╛рж╣рж┐ржд">ржмрж┐ржмрж╛рж╣рж┐ржд</SelectItem>
                                                    </SelectContent>
                                                </Select>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />
                                </div>
                            </div>

                            <div className="space-y-4">
                                <div className="flex items-center gap-2 bg-primary-100 p-3 rounded-lg">
                                    <div className="bg-primary-500 text-white p-2 rounded-full">
                                        <Home className="h-4 w-4" />
                                    </div>
                                    <h3 className="text-lg font-bold text-primary-700">ржпрзЛржЧрж╛ржпрзЛржЧрзЗрж░ рждржерзНржп</h3>
                                </div>
                                <Separator className="my-2 bg-primary-100" />

                                <div className="grid gap-6 md:grid-cols-2">
                                    <FormField
                                        control={form.control}
                                        name="currentAddress"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">ржмрж░рзНрждржорж╛ржи ржарж┐ржХрж╛ржирж╛ *</FormLabel>
                                                <FormControl>
                                                    <Textarea
                                                        placeholder="ржмрж░рзНрждржорж╛ржи ржарж┐ржХрж╛ржирж╛ рж▓рж┐ржЦрзБржи"
                                                        {...field}
                                                        className="border-primary-200 focus-visible:ring-primary-200 rounded-lg"
                                                    />
                                                </FormControl>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />

                                    <FormField
                                        control={form.control}
                                        name="permanentAddress"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">рж╕рзНржерж╛ржпрж╝рзА ржарж┐ржХрж╛ржирж╛ </FormLabel>
                                                <FormControl>
                                                    <Textarea
                                                        placeholder="рж╕рзНржерж╛ржпрж╝рзА ржарж┐ржХрж╛ржирж╛ рж▓рж┐ржЦрзБржи"
                                                        {...field}
                                                        className="border-primary-200 focus-visible:ring-primary-200 rounded-lg"
                                                    />
                                                </FormControl>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />
                                </div>

                                <div className="grid gap-6 md:grid-cols-2">
                                    <FormField
                                        control={form.control}
                                        name="studentMobile"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ *</FormLabel>
                                                <FormControl>
                                                    <Input
                                                        placeholder="рзжрззXXXXXXXXX"
                                                        {...field}
                                                        className="border-primary-200 focus-visible:ring-primary-200 rounded-lg"
                                                    />
                                                </FormControl>
                                                <FormDescription className="text-xs">рззрзз ржбрж┐ржЬрж┐ржЯрзЗрж░ ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ ржжрж┐ржи</FormDescription>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />

                                    <FormField
                                        control={form.control}
                                        name="guardianMobile"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">ржЕржнрж┐ржнрж╛ржмржХрзЗрж░ ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ </FormLabel>
                                                <FormControl>
                                                    <Input
                                                        placeholder="рзжрззXXXXXXXXX"
                                                        {...field}
                                                        className="border-primary-200 focus-visible:ring-primary-200 rounded-lg"
                                                    />
                                                </FormControl>
                                                <FormDescription className="text-xs">рззрзз ржбрж┐ржЬрж┐ржЯрзЗрж░ ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ ржжрж┐ржи</FormDescription>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />
                                </div>

                                <FormField
                                    control={form.control}
                                    name="email"
                                    render={({ field }) => (
                                        <FormItem>
                                            <FormLabel className="text-primary-700 font-medium">рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржЗржорзЗржЗрж▓ </FormLabel>
                                            <FormControl>
                                                <Input
                                                    type="email"
                                                    placeholder="example@mail.com"
                                                    {...field}
                                                    className="border-primary-200 focus-visible:ring-primary-200 rounded-lg"
                                                />
                                            </FormControl>
                                            <FormMessage className="text-red-500" />
                                        </FormItem>
                                    )}
                                />
                            </div>

                            <div className="space-y-4">
                                <div className="flex items-center gap-2 bg-primary-100 p-3 rounded-lg">
                                    <div className="bg-primary-500 text-white p-2 rounded-full">
                                        <BookOpen className="h-4 w-4" />
                                    </div>
                                    <h3 className="text-lg font-bold text-primary-700">рж╢рж┐ржХрзНрж╖рж╛ржЧржд ржУ ржЕржирзНржпрж╛ржирзНржп рждржерзНржп</h3>
                                </div>
                                <Separator className="my-2 bg-primary-100" />

                                <div className="grid gap-6 md:grid-cols-2">
                                    <FormField
                                        control={form.control}
                                        name="education"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">рж╕рж░рзНржмрзЛржЪрзНржЪ рж╢рж┐ржХрзНрж╖рж╛ржЧржд ржпрзЛржЧрзНржпрждрж╛ *</FormLabel>
                                                <Select onValueChange={field.onChange} defaultValue={field.value}>
                                                    <FormControl>
                                                        <SelectTrigger className="w-full border-primary-200 focus:ring-primary-500 rounded-lg">
                                                            <SelectValue placeholder="рж╢рж┐ржХрзНрж╖рж╛ржЧржд ржпрзЛржЧрзНржпрждрж╛ рж▓рж┐ржЦрзБржи" />
                                                        </SelectTrigger>
                                                    </FormControl>
                                                    <SelectContent className="rounded-lg">
                                                        <SelectItem value="рж╖рж╖рзНржа рж╢рзНрж░рзЗржгрзА">рж╖рж╖рзНржа рж╢рзНрж░рзЗржгрзА</SelectItem>
                                                        <SelectItem value="рж╕ржкрзНрждржо рж╢рзНрж░рзЗржгрзА">рж╕ржкрзНрждржо рж╢рзНрж░рзЗржгрзА</SelectItem>
                                                        <SelectItem value="ржЕрж╖рзНржЯржо рж╢рзНрж░рзЗржгрзА">ржЕрж╖рзНржЯржо рж╢рзНрж░рзЗржгрзА</SelectItem>
                                                        <SelectItem value="ржиржмржо рж╢рзНрж░рзЗржгрзА">ржиржмржо рж╢рзНрж░рзЗржгрзА</SelectItem>
                                                        <SelectItem value="ржжрж╢ржо рж╢рзНрж░рзЗржгрзА">ржжрж╢ржо рж╢рзНрж░рзЗржгрзА</SelectItem>
                                                        <SelectItem value="ржПрж╕ржПрж╕рж╕рж┐ ржкрж╛рж╕">ржПрж╕ржПрж╕рж╕рж┐ ржкрж╛рж╕</SelectItem>
                                                        <SelectItem value="ржПржХрж╛ржжрж╢ рж╢рзНрж░рзЗржгрзА">ржПржХрж╛ржжрж╢ рж╢рзНрж░рзЗржгрзА</SelectItem>
                                                        <SelectItem value="ржжрзНржмрж╛ржжрж╢ рж╢рзНрж░рзЗржгрзА">ржжрзНржмрж╛ржжрж╢ рж╢рзНрж░рзЗржгрзА</SelectItem>
                                                        <SelectItem value="ржПржЗржЪржПрж╕рж╕рж┐ ржкрж╛рж╕">ржПржЗржЪржПрж╕рж╕рж┐ ржкрж╛рж╕</SelectItem>
                                                        <SelectItem value="ржЕржирж╛рж░рзНрж╕ рззржо ржмрж░рзНрж╖">ржЕржирж╛рж░рзНрж╕ рззржо ржмрж░рзНрж╖</SelectItem>
                                                        <SelectItem value="ржЕржирж╛рж░рзНрж╕ рзирзЯ ржмрж░рзНрж╖">ржЕржирж╛рж░рзНрж╕ рзирзЯ ржмрж░рзНрж╖</SelectItem>
                                                        <SelectItem value="ржЕржирж╛рж░рзНрж╕ рзйрзЯ ржмрж░рзНрж╖">ржЕржирж╛рж░рзНрж╕ рзйрзЯ ржмрж░рзНрж╖</SelectItem>
                                                        <SelectItem value="ржЕржирж╛рж░рзНрж╕ рзкрж░рзНрже ржмрж░рзНрж╖">ржЕржирж╛рж░рзНрж╕ рзкрж░рзНрже ржмрж░рзНрж╖</SelectItem>

                                                    </SelectContent>
                                                </Select>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />

                                    <FormField
                                        control={form.control}
                                        name="occupation"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">ржкрзЗрж╢рж╛ *</FormLabel>
                                                <Select onValueChange={field.onChange} defaultValue={field.value}>
                                                    <FormControl>
                                                        <SelectTrigger className="w-full border-primary-200 focus:ring-primary-500 rounded-lg">
                                                            <SelectValue placeholder="ржЖржкржирж╛рж░ ржкрзЗрж╢рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи" />
                                                        </SelectTrigger>
                                                    </FormControl>
                                                    <SelectContent className="rounded-lg">
                                                        <SelectItem value="ржЫрж╛рждрзНрж░/ржЫрж╛рждрзНрж░рзА">ржЫрж╛рждрзНрж░/ржЫрж╛рждрзНрж░рзА</SelectItem>
                                                        <SelectItem value="ржмрзНржпрж╛рж╕рж┐ржХ ржХржорзНржкрж┐ржЙржЯрж╛рж░">ржмрзНржпржмрж╕рж╛рзЯрзА</SelectItem>
                                                        <SelectItem value="ржЪрж╛ржХрзБрж░рзАржЬрзАржмрзА">ржЪрж╛ржХрж░рж┐ржЬрзАржмрзА</SelectItem>
                                                        <SelectItem value="ржЧрзГрж╣рж┐ржгрзА">ржЧрзГрж╣рж┐ржгрзА</SelectItem>
                                                    </SelectContent>
                                                </Select>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />
                                </div>

                                <div className="grid gap-6 md:grid-cols-2">
                                    <FormField
                                        control={form.control}
                                        name="course"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">ржХрзЛрж░рзНрж╕ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи *</FormLabel>
                                                <Select onValueChange={field.onChange} defaultValue={field.value}>
                                                    <FormControl>
                                                        <SelectTrigger className="w-full border-primary-200 focus:ring-primary-500 rounded-lg">
                                                            <SelectValue placeholder="ржХрзЛрж░рзНрж╕ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи" />
                                                        </SelectTrigger>
                                                    </FormControl>
                                                    <SelectContent className="rounded-lg">
                                                        <SelectItem value="ржЧрзНрж░рж╛ржлрж┐ржХрзНрж╕ ржбрж┐ржЬрж╛ржЗржи">ржЧрзНрж░рж╛ржлрж┐ржХрзНрж╕ ржбрж┐ржЬрж╛ржЗржи</SelectItem>
                                                        <SelectItem value="ржмрзНржпрж╛рж╕рж┐ржХ ржХржорзНржкрж┐ржЙржЯрж╛рж░">ржмрзНржпрж╛рж╕рж┐ржХ ржХржорзНржкрж┐ржЙржЯрж╛рж░</SelectItem>
                                                        <SelectItem value="ржУрзЯрзЗржм ржбрж┐ржЬрж╛ржЗржи ржПржирзНржб ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯ">ржУрзЯрзЗржм ржбрж┐ржЬрж╛ржЗржи ржПржирзНржб ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯ</SelectItem>
                                                    </SelectContent>
                                                </Select>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />

                                    {/* <FormField
                                        control={form.control}
                                        name="bloodGroup"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">рж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржк</FormLabel>
                                                <FormControl>
                                                    <Input
                                                        placeholder="ржЖржкржирж╛рж░ рж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржк рж▓рж┐ржЦрзБржи"
                                                        {...field}
                                                        className="border-primary-200 focus-visible:ring-primary-200 rounded-lg"
                                                    />
                                                </FormControl>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    /> */}
                                    <FormField
                                        control={form.control}
                                        name="bloodGroup"
                                        render={({ field }) => (
                                            <FormItem>
                                                <FormLabel className="text-primary-700 font-medium">рж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржк</FormLabel>
                                                <Select onValueChange={field.onChange} defaultValue={field.value}>
                                                    <FormControl>
                                                        <SelectTrigger className="w-full border-primary-200 focus:ring-primary-500 rounded-lg">
                                                            <SelectValue placeholder="ржЖржкржирж╛рж░ рж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржк ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи" />
                                                        </SelectTrigger>
                                                    </FormControl>
                                                    <SelectContent className="rounded-lg">
                                                        <SelectItem value="ржП ржкржЬрж┐ржЯрж┐ржн">ржП ржкржЬрж┐ржЯрж┐ржн</SelectItem>
                                                        <SelectItem value="ржП ржирзЗржЧрзЗржЯрж┐ржн">ржП ржирзЗржЧрзЗржЯрж┐ржн</SelectItem>
                                                        <SelectItem value="ржмрж┐ ржкржЬрж┐ржЯрж┐ржн">ржмрж┐ ржкржЬрж┐ржЯрж┐ржн</SelectItem>
                                                        <SelectItem value="ржмрж┐ ржирзЗржЧрзЗржЯрж┐ржн">ржмрж┐ ржирзЗржЧрзЗржЯрж┐ржн</SelectItem>
                                                        <SelectItem value="ржПржмрж┐ ржкржЬрж┐ржЯрж┐ржн">ржПржмрж┐ ржкржЬрж┐ржЯрж┐ржн</SelectItem>
                                                        <SelectItem value="ржПржмрж┐ ржирзЗржЧрзЗржЯрж┐ржн">ржПржмрж┐ ржирзЗржЧрзЗржЯрж┐ржн</SelectItem>
                                                        <SelectItem value="ржУ ржкржЬрж┐ржЯрж┐ржн">ржУ ржкржЬрж┐ржЯрж┐ржн</SelectItem>
                                                        <SelectItem value="ржУ ржирзЗржЧрзЗржЯрж┐ржн">ржУ ржирзЗржЧрзЗржЯрж┐ржн</SelectItem>
                                                    </SelectContent>
                                                </Select>
                                                <FormMessage className="text-red-500" />
                                            </FormItem>
                                        )}
                                    />
                                </div>
                            </div>

                            <div className="flex justify-center pt-6">
                                <button
                                    type="submit"
                                    disabled={isSubmitting}
                                    className="bg-primary-600 hover:bg-primary-700 disabled:cursor-not-allowed disabled:opacity-70 text-white font-bold py-3 px-8 rounded-full shadow-lg transform transition-all duration-300 hover:scale-105 flex items-center gap-2 cursor-pointer"
                                >
                                    {isSubmitting ? "ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи..." : "ржЬржорж╛ ржжрж┐ржи"}
                                    <ChevronRightIcon className="transition-transform duration-200 group-hover:translate-x-1" />
                                </button>
                            </div>
                        </form>
                    </Form>
                </CardContent>
                <CardFooter className="flex flex-col items-center justify-center border-t bg-primary-50 p-6 text-center text-sm">
                    <div className="bg-white p-3 rounded-lg shadow-sm border border-primary-100 w-full max-w-md">
                        <p className="text-primary-700">ЁЯУЮ ржЖржкржирж╛рж░ ржпрзЗ ржХрзЛржи ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛рзЯ рж╣рзЗрж▓рзНржк-рж▓рж╛ржЗржи  ржирж╛ржорзНржмрж╛рж░: 01715409109</p>
                    </div>
                </CardFooter>
            </Card>
            <CongratsModal
                isOpen={showSuccessModal}
                onClose={() => setShowSuccessModal(false)}
                studentName={submittedName}
            />
            <ErrorModal
                isOpen={showErrorModal}
                onClose={() => setShowErrorModal(false)}
                onRetry={handleRetry}
                errorMessage={errorMessage}
            />
        </div>
    )
}
